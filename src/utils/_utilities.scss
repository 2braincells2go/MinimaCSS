
// Margin utilities
@each $size, $value in $spacers {
  .m-#{$size} {
    margin: $value !important;
  }

  .mt-#{$size},
  .my-#{$size} {
    margin-top: $value !important;
  }

  .mr-#{$size},
  .mx-#{$size} {
    margin-right: $value !important;
  }

  .mb-#{$size},
  .my-#{$size} {
    margin-bottom: $value !important;
  }

  .ml-#{$size},
  .mx-#{$size} {
    margin-left: $value !important;
  }
}

// Padding utilities
@each $size, $value in $spacers {
  .p-#{$size} {
    padding: $value !important;
  }

  .pt-#{$size},
  .py-#{$size} {
    padding-top: $value !important;
  }

  .pr-#{$size},
  .px-#{$size} {
    padding-right: $value !important;
  }

  .pb-#{$size},
  .py-#{$size} {
    padding-bottom: $value !important;
  }

  .pl-#{$size},
  .px-#{$size} {
    padding-left: $value !important;
  }
}

.surface-primary{
  background-color: var(--surface-primary-color);
}
.surface-secondary{
  background-color: var(--surface-secondary-color);
}
.surface-tertiary{
  background-color: var(--surface-tertiary-color);
}

.text-primary{
  color: var(--text-primary-color);
}

.text-secondary{
  color: var(--text-secondary-color);
}

.text-tertiary{
  color: var(--text-tertiary-color);
}

// bg and text utilities
@each $color, $value in $colors {
  .bg-#{$color} {
    background-color: $value !important;
  }
  .text-#{$color} {
    color: $value !important;
  }
  .border-#{$color} {
    border-color: $value !important;
  }
}

@each $name, $value in $shadows {
  .shadow-#{$name} {
    box-shadow: #{$value};
  }
}

// Text Utilities
.font-bold {
  font-weight: bold !important;
}
.font-semibold {
  font-weight: 500 !important;
}
.font-normal {
  font-weight: normal !important;
}

// Visibility Utilities
.hidden {
  display: none !important;
}

.visible {
  display: block !important;
}
// Generates responsive classes for visibility
@each $bp-name, $bp-size in $breakpoints {
  // Visible utility
  .visible-#{$bp-name} {
    display: none !important; // Hide by default

    @media (min-width: $bp-size) {
      display: block !important; // Show at the breakpoint and up
    }
  }

  // Hidden utility
  .hidden-#{$bp-name} {
    @media (min-width: $bp-size) {
      display: none !important; // Hide at the breakpoint and up
    }
  }
}


// Text Alignment Utilities
.text-left {
  text-align: left !important;
}

.text-center {
  text-align: center !important;
}

.text-right {
  text-align: right !important;
}

.text-justify {
  text-align: justify !important;
}

.text-lowercase {
  text-transform: lowercase !important;
}
.text-uppercase {
  text-transform: uppercase !important;
}
.text-capitalize {
  text-transform: capitalize !important;
}
.text-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.text-clip {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: clip;
}
.text-break {
  word-break: break-all;
  word-wrap: break-word;
}

.font-italic {
  font-style: italic;
}

// Display Utilities
.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

.d-block {
  display: block !important;
}

.d-flex {
  display: flex !important;
}

.d-none {
  display: none !important;
}

// Flex Utilities
.justify-content-start {
  justify-content: flex-start !important;
}

.justify-content-center {
  justify-content: center !important;
}

.justify-content-end {
  justify-content: flex-end !important;
}

.align-items-start {
  align-items: flex-start !important;
}

.align-items-center {
  align-items: center !important;
}

.align-items-end {
  align-items: flex-end !important;
}

// Positioning Utilities

// Position utility
.position-static { position: static; }
.position-relative { position: relative; }
.position-absolute { position: absolute; }
.position-fixed { position: fixed; }
.position-sticky { position: sticky; }

// Top / Right / Bottom / Left utilities with rem units // Position utilities using `rem` units with 0.5 increments
@for $i from 1 through 20 {
  $size: $i * 0.5;
  .top-#{$i} { top: #{$size}rem; }
  .right-#{$i} { right: #{$size}rem; }
  .bottom-#{$i} { bottom: #{$size}rem; }
  .left-#{$i} { left: #{$size}rem; }
}

// Z-index utilities from 10 to 100, increment by 10
@for $i from 1 through 10 {
  .z-#{$i * 10} { z-index: $i * 10; }
}

// Full positioning shortcut
.full-position {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// Centering utility - absolute center
.center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Width and Height Utilities

@each $size-name, $size-value in $sizes {
  .w-#{$size-name} {
    width: $size-value !important;
  }

  .h-#{$size-name} {
    height: $size-value !important;
  }

  .max-w-#{$size-name} {
    max-width: $size-value !important;
  }

  .max-h-#{$size-name} {
    max-height: $size-value !important;
  }

  .min-w-#{$size-name} {
    min-width: $size-value !important;
  }

  .min-h-#{$size-name} {
    min-height: $size-value !important;
  }
}

// Border Utilities
.border {
  border: 1px solid !important;
}

.border-top {
  border-top: 1px solid !important;
}

.border-right {
  border-right: 1px solid !important;
}

.border-bottom {
  border-bottom: 1px solid !important;
}

.border-left {
  border-left: 1px solid !important;
}

.border-0 {
  border: 0 !important;
}

.border-top-0 {
  border-top: 0 !important;
}

.border-right-0 {
  border-right: 0 !important;
}

.border-bottom-0 {
  border-bottom: 0 !important;
}

.border-left-0 {
  border-left: 0 !important;
}

// Border Radius Utilities
@for $i from 0 through 3 {
  .rounded-#{$i} {
    border-radius: #{$i * 0.25rem} !important;
  }
}

.rounded-circle {
  border-radius: 50% !important;
}

// Overflow Utilities
.overflow-auto {
  overflow: auto !important;
}

.overflow-hidden {
  overflow: hidden !important;
}

// Opacity Utilities
@for $i from 0 through 10 {
  .opacity-#{$i} {
    opacity: $i * 0.1 !important;
  }
}

// Cursor utilities
$cursors: (
  'auto', 'default', 'none', 'context-menu', 'help', 'pointer', 'progress', 
  'wait', 'cell', 'crosshair', 'text', 'vertical-text', 'alias', 'copy', 
  'move', 'no-drop', 'not-allowed', 'grab', 'grabbing', 'all-scroll', 
  'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 
  'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 
  'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out'
);

@each $cursor in $cursors {
  .cursor-#{$cursor} { cursor: $cursor; }
}


// Media Utilites

// Responsive image
.img-responsive {
  max-width: 100%;
  height: auto;
}

// Disable dragging of image
.img-non-draggable {
  -moz-user-select: none;
  -webkit-user-drag: none;
  user-select: none;
}

// Aspect Ratio Boxes
// Uses padding-top trick to maintain aspect ratio
$aspect-ratios: (
  '16-9': 56.25%,  // 16:9
  '4-3': 75%,      // 4:3
  '1-1': 100%      // 1:1
);

@each $ratio-name, $ratio in $aspect-ratios {
  .aspect-#{$ratio-name} {
    position: relative;
    display: block;
    width: 100%;
    
    &::before {
      content: "";
      display: block;
      padding-top: $ratio;
    }
  
    > img {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
}

// Utility for image shapes
.img-circle {
  border-radius: 50%;
}

.img-thumbnail {
  padding: 0.25rem;
  background-color: var(--surface-primary-color);
  border: 1px solid var(--border-primary-color);
  border-radius: 0.25rem;
  max-width: 100%;
  height: auto;
}

// Utility for image shadow
.img-shadow {
  box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.1);
}